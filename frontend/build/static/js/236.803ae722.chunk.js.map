{"version":3,"file":"static/js/236.803ae722.chunk.js","mappings":"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","sources":["components/SponserCardProduct.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport displayINRCurrency from '../helpers/displayCurrency';\r\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa6';\r\nimport { Link } from 'react-router-dom';\r\nimport addToCart from '../helpers/addToCart';\r\nimport Context from '../context';\r\nimport SummaryApi from '../common';\r\nimport { FaRegStar } from 'react-icons/fa'; // Import an icon for sponsored\r\n // Ensure to adjust the path as per your project structure\r\n\r\nconst SponserCardProduct = ({ heading }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const loadingList = new Array(13).fill(null);\r\n\r\n  const scrollElement = useRef();\r\n\r\n  const { fetchUserAddToCart } = useContext(Context);\r\n\r\n  // Define quantity state\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const handleAddToCart = async (e, id) => {\r\n    await addToCart(e, id, quantity);\r\n    fetchUserAddToCart();\r\n  };\r\n\r\n  const fetchAllProduct = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(SummaryApi.allProduct.url);\r\n      const dataResponse = await response.json();\r\n\r\n      // Filter out the products where the 'sponsor' field is true\r\n      const sponsoredProducts = dataResponse?.data?.filter((product) => product.sponsor) || [];\r\n\r\n      setData(sponsoredProducts);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllProduct();\r\n  }, []);\r\n\r\n  const scrollRight = () => {\r\n    scrollElement.current.scrollTo({\r\n      left: scrollElement.current.scrollLeft + 300,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const scrollLeft = () => {\r\n    scrollElement.current.scrollTo({\r\n      left: scrollElement.current.scrollLeft - 300,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='container mx-auto px-4 my-6 relative'>\r\n      <h2 className='text-2xl font-semibold py-4 flex items-center gap-2'>\r\n \r\n  <span className='text-sm text-yellow-500 bg-yellow-100 px-2 py-0.5 rounded-full flex items-center gap-1'>\r\n    <FaRegStar className='text-yellow-500' />  {heading}\r\n  </span>\r\n</h2>\r\n\r\n      <div className='flex items-center gap-4 md:gap-6 overflow-x-scroll scrollbar-none transition-all' ref={scrollElement}>\r\n        <button className='bg-white shadow-md rounded-full p-1 absolute left-0 text-lg hidden md:block' onClick={scrollLeft}>\r\n          <FaAngleLeft />\r\n        </button>\r\n        <button className='bg-white shadow-md rounded-full p-1 absolute right-0 text-lg hidden md:block' onClick={scrollRight}>\r\n          <FaAngleRight />\r\n        </button>\r\n\r\n        {\r\n          loading ? (\r\n            loadingList.map((_, index) => (\r\n              <div key={index} className='w-full min-w-[280px] md:min-w-[320px] max-w-[280px] md:max-w-[320px] bg-white rounded-sm shadow'>\r\n                <div className='bg-slate-200 h-48 p-4 min-w-[280px] md:min-w-[145px] flex justify-center items-center animate-pulse'></div>\r\n                <div className='p-4 grid gap-3'>\r\n                  <h2 className='font-medium text-base md:text-lg text-ellipsis line-clamp-1 text-black p-1 py-2 animate-pulse rounded-full bg-slate-200'></h2>\r\n                  <p className='capitalize text-slate-500 p-1 animate-pulse rounded-full bg-slate-200 py-2'></p>\r\n                  <div className='flex gap-3'>\r\n                    <p className='text-red-600 font-medium p-1 animate-pulse rounded-full bg-slate-200 w-full py-2'></p>\r\n                    <p className='text-slate-500 line-through p-1 animate-pulse rounded-full bg-slate-200 w-full py-2'></p>\r\n                  </div>\r\n                  <button className='text-sm text-white px-3 rounded-full bg-slate-200 py-2 animate-pulse'></button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            data.map((product) => (\r\n              <Link key={product._id} to={\"product/\" + product._id} className='w-full min-w-[280px] md:min-w-[320px] max-w-[280px] md:max-w-[320px] bg-white rounded-sm shadow'>\r\n                <div className='bg-slate-200 h-48 p-4 min-w-[280px] md:min-w-[145px] flex justify-center items-center'>\r\n                  <img src={product.productImage[0]} className='object-scale-down h-full hover:scale-110 transition-all mix-blend-multiply' />\r\n                </div>\r\n                <div className='p-4 grid gap-3'>\r\n                  <h2 className='font-medium text-base md:text-lg text-ellipsis line-clamp-1 text-black'>{product.productName}</h2>\r\n                  <p className='capitalize text-slate-500'>{product.category}</p>\r\n                  <p className='capitalize text-slate-500'>{product.brandName}</p>\r\n                  <div className='flex gap-3'>\r\n                    <p className='text-red-600 font-medium'>{displayINRCurrency(product.price)}</p>\r\n                  </div>\r\n                  <button className='text-sm bg-red-600 hover:bg-red-700 text-white px-3 py-0.5 rounded-full' onClick={(e) => handleAddToCart(e, product._id)}>Add to Cart</button>\r\n                </div>\r\n              </Link>\r\n            ))\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SponserCardProduct;\r\n"],"names":["_ref","heading","data","setData","useState","loading","setLoading","loadingList","Array","fill","scrollElement","useRef","fetchUserAddToCart","useContext","Context","quantity","setQuantity","useEffect","async","_dataResponse$data","response","fetch","SummaryApi","allProduct","url","dataResponse","json","sponsoredProducts","filter","product","sponsor","error","console","fetchAllProduct","_jsxs","className","children","_jsx","FaRegStar","ref","onClick","scrollLeft","current","scrollTo","left","behavior","FaAngleLeft","scrollRight","FaAngleRight","map","_","index","Link","to","_id","src","productImage","productName","category","brandName","displayINRCurrency","price","e","id","addToCart","handleAddToCart"],"sourceRoot":""}